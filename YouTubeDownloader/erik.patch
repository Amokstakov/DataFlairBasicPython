From 8e37f7f6f9085165c7651ebd0113ea51c9984e29 Mon Sep 17 00:00:00 2001
From: "Erik St. Martin" <alakriti@gmail.com>
Date: Thu, 24 Sep 2020 22:48:17 -0400
Subject: [PATCH] Refactor docker logic

---
 YouTubeDownloader/client/Dockerfile          | 10 ++-
 YouTubeDownloader/client/Dockerfile-prod     | 23 ------
 YouTubeDownloader/client/data/nginx/app.conf |  4 +-
 YouTubeDownloader/client/init-letsencrypt.sh | 80 --------------------
 YouTubeDownloader/client/nginx.conf          | 27 -------
 YouTubeDownloader/docker-compose-prod.yml    | 34 ---------
 YouTubeDownloader/docker-compose.yml         | 21 ++---
 YouTubeDownloader/init-letsencrypt.sh        |  2 +-
 YouTubeDownloader/server/Dockerfile          |  1 +
 9 files changed, 16 insertions(+), 186 deletions(-)
 mode change 100644 => 100755 YouTubeDownloader/client/Dockerfile
 delete mode 100644 YouTubeDownloader/client/Dockerfile-prod
 mode change 100644 => 100755 YouTubeDownloader/client/data/nginx/app.conf
 delete mode 100644 YouTubeDownloader/client/init-letsencrypt.sh
 delete mode 100644 YouTubeDownloader/client/nginx.conf
 delete mode 100644 YouTubeDownloader/docker-compose-prod.yml
 mode change 100644 => 100755 YouTubeDownloader/docker-compose.yml
 mode change 100644 => 100755 YouTubeDownloader/init-letsencrypt.sh
 mode change 100644 => 100755 YouTubeDownloader/server/Dockerfile

diff --git a/YouTubeDownloader/client/Dockerfile b/YouTubeDownloader/client/Dockerfile
old mode 100644
new mode 100755
index 25a78f5..549b765
--- a/YouTubeDownloader/client/Dockerfile
+++ b/YouTubeDownloader/client/Dockerfile
@@ -1,15 +1,19 @@
-FROM node:12.16.1 as install
+FROM node:12.16.1 as build 
 
 WORKDIR /app
 
 COPY package*.json ./
 
-RUN npm ci 
+RUN npm ci
 
 COPY . .
 
 RUN npm run build
 
-#CMD ["npm","start"]
+FROM nginx:stable-alpine
+COPY --from=build /app/build /usr/share/nginx/html
 
+RUN rm /etc/nginx/conf.d/default.conf
 
+EXPOSE 80
+CMD ["nginx","-g","daemon off;"]
diff --git a/YouTubeDownloader/client/Dockerfile-prod b/YouTubeDownloader/client/Dockerfile-prod
deleted file mode 100644
index 75a7d73..0000000
--- a/YouTubeDownloader/client/Dockerfile-prod
+++ /dev/null
@@ -1,23 +0,0 @@
-FROM node:12.16.1 as build 
-
-WORKDIR /app
-
-COPY package*.json ./
-
-RUN npm ci
-
-COPY . .
-
-RUN npm run build
-
-CMD ["npm","start"]
-#production
-#FROM nginx:stable-alpine
-#COPY --from=build /app/build /usr/share/nginx/html
-
-#RUN rm /etc/nginx/conf.d/default.conf
-#COPY nginx.conf /etc/nginx/conf.d
-
-#EXPOSE 80
-#CMD sed -i -e 's/$PORT/'"$PORT"'/g' /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'
-#CMD ["nginx","-g","daemon off;"]
diff --git a/YouTubeDownloader/client/data/nginx/app.conf b/YouTubeDownloader/client/data/nginx/app.conf
old mode 100644
new mode 100755
index a9d30fb..364a5d9
--- a/YouTubeDownloader/client/data/nginx/app.conf
+++ b/YouTubeDownloader/client/data/nginx/app.conf
@@ -12,7 +12,7 @@ server {
     }
 
     location /api {
-        proxy_pass http://webapp_api;
+        proxy_pass http://server:8080;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header Host $host;
         proxy_redirect off;
@@ -41,7 +41,7 @@ server {
     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
 
     location / {
-        proxy_pass  https://test1.melkey.dev;
+        proxy_pass  https://server:8080;
         proxy_set_header    Host                $http_host;
         proxy_set_header    X-Real-IP           $remote_addr;
         proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
diff --git a/YouTubeDownloader/client/init-letsencrypt.sh b/YouTubeDownloader/client/init-letsencrypt.sh
deleted file mode 100644
index 57c1ca0..0000000
--- a/YouTubeDownloader/client/init-letsencrypt.sh
+++ /dev/null
@@ -1,80 +0,0 @@
-#!/bin/bash
-
-if ! [ -x "$(command -v docker-compose)" ]; then
-  echo 'Error: docker-compose is not installed.' >&2
-  exit 1
-fi
-
-domains=(youtube.melkey.dev www.youtube.melkey.dev)
-rsa_key_size=4096
-data_path="./data/certbot"
-email="" # Adding a valid address is strongly recommended
-staging=0 # Set to 1 if you're testing your setup to avoid hitting request limits
-
-if [ -d "$data_path" ]; then
-  read -p "Existing data found for $domains. Continue and replace existing certificate? (y/N) " decision
-  if [ "$decision" != "Y" ] && [ "$decision" != "y" ]; then
-    exit
-  fi
-fi
-
-
-if [ ! -e "$data_path/conf/options-ssl-nginx.conf" ] || [ ! -e "$data_path/conf/ssl-dhparams.pem" ]; then
-  echo "### Downloading recommended TLS parameters ..."
-  mkdir -p "$data_path/conf"
-  curl -s https://raw.githubusercontent.com/certbot/certbot/master/certbot-nginx/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf > "$data_path/conf/options-ssl-nginx.conf"
-  curl -s https://raw.githubusercontent.com/certbot/certbot/master/certbot/certbot/ssl-dhparams.pem > "$data_path/conf/ssl-dhparams.pem"
-  echo
-fi
-
-echo "### Creating dummy certificate for $domains ..."
-path="/etc/letsencrypt/live/$domains"
-mkdir -p "$data_path/conf/live/$domains"
-docker-compose run --rm --entrypoint "\
-  openssl req -x509 -nodes -newkey rsa:1024 -days 1\
-    -keyout '$path/privkey.pem' \
-    -out '$path/fullchain.pem' \
-    -subj '/CN=localhost'" certbot
-echo
-
-
-echo "### Starting nginx ..."
-docker-compose up --force-recreate -d nginx
-echo
-
-echo "### Deleting dummy certificate for $domains ..."
-docker-compose run --rm --entrypoint "\
-  rm -Rf /etc/letsencrypt/live/$domains && \
-  rm -Rf /etc/letsencrypt/archive/$domains && \
-  rm -Rf /etc/letsencrypt/renewal/$domains.conf" certbot
-echo
-
-
-echo "### Requesting Let's Encrypt certificate for $domains ..."
-#Join $domains to -d args
-domain_args=""
-for domain in "${domains[@]}"; do
-  domain_args="$domain_args -d $domain"
-done
-
-# Select appropriate email arg
-case "$email" in
-  "") email_arg="--register-unsafely-without-email" ;;
-  *) email_arg="--email $email" ;;
-esac
-
-# Enable staging mode if needed
-if [ $staging != "0" ]; then staging_arg="--staging"; fi
-
-docker-compose run --rm --entrypoint "\
-  certbot certonly --webroot -w /var/www/certbot \
-    $staging_arg \
-    $email_arg \
-    $domain_args \
-    --rsa-key-size $rsa_key_size \
-    --agree-tos \
-    --force-renewal" certbot
-echo
-
-echo "### Reloading nginx ..."
-docker-compose exec nginx nginx -s reload
diff --git a/YouTubeDownloader/client/nginx.conf b/YouTubeDownloader/client/nginx.conf
deleted file mode 100644
index 642a03d..0000000
--- a/YouTubeDownloader/client/nginx.conf
+++ /dev/null
@@ -1,27 +0,0 @@
-upstream webapp_api {
-    server server:8080;
-}
-
-server {
-    listen 80;
-    listen [::]:80;
-
-    server_name youtube.melkey.dev www.youtube.melkey.dev;
-    
-    location /api {
-        proxy_pass http://webapp_api;
-        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
-        proxy_set_header Host $host;
-        proxy_redirect off;
-    }
-    
-    location / {
-        root   /usr/share/nginx/html;
-        index  index.html index.htm;
-        try_files $uri $uri/ /index.html;
-    }
-    error_page   500 502 503 504  /50x.html;
-    location = /50x.html {
-        root   /usr/share/nginx/html;
-    }
-}
diff --git a/YouTubeDownloader/docker-compose-prod.yml b/YouTubeDownloader/docker-compose-prod.yml
deleted file mode 100644
index 67fcafa..0000000
--- a/YouTubeDownloader/docker-compose-prod.yml
+++ /dev/null
@@ -1,34 +0,0 @@
-version: '3'
-
-services:
-  client:
-    build:
-      context: ./client
-      dockerfile: Dockerfile-prod
-    ports:
-      - "3000:80" 
-
-  server:
-    build: ./server
-    command: gunicorn --bind 0.0.0.0:8080 app:app
-    expose:
-      - 8080
-  nginx:
-    image: nginx:1.15-alpine
-    restart: unless-stopped
-    volumes:
-      - ./client/data/nginx:/etc/nginx/conf.d
-      - ./client/data/certbot/conf:/etc/letsencrypt
-      - ./client/data/certbot/www:/var/www/certbot
-    ports:
-      - "80:80"
-      - "443:443"
-    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
-
-  certbot:
-    image: certbot/certbot
-    restart: unless-stopped
-    volumes:
-      - ./client/data/certbot/conf:/etc/letsencrypt
-      - ./client/data/certbot/www:/var/www/certbot
-    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
diff --git a/YouTubeDownloader/docker-compose.yml b/YouTubeDownloader/docker-compose.yml
old mode 100644
new mode 100755
index 0c9a352..cb6c8d4
--- a/YouTubeDownloader/docker-compose.yml
+++ b/YouTubeDownloader/docker-compose.yml
@@ -1,29 +1,18 @@
 version: '3'
 
 services:
-  client:
-    container_name: client
-    build:
-      context: ./client
-      dockerfile: Dockerfile-prod
-    volumes:
-      - static:/client/build 
-    stdin_open: true
-    #ports:
-      #- "3000:80" 
-
   server:
     build: ./server
     command: gunicorn --bind 0.0.0.0:8080 app:app
     expose:
       - 8080
-
-  nginx:
-    image: nginx:1.15-alpine
+  client:
+    container_name: client
+    build:
+      context: ./client
+      dockerfile: Dockerfile
     restart: unless-stopped
     volumes:
-      - static:/usr/share/nginx/html
-      - ./client/build:/usr/share/nginx/html/
       - ./client/data/nginx:/etc/nginx/conf.d
       - ./client/data/certbot/conf:/etc/letsencrypt
       - ./client/data/certbot/www:/var/www/certbot
diff --git a/YouTubeDownloader/init-letsencrypt.sh b/YouTubeDownloader/init-letsencrypt.sh
old mode 100644
new mode 100755
index 70d3aa8..6a73859
--- a/YouTubeDownloader/init-letsencrypt.sh
+++ b/YouTubeDownloader/init-letsencrypt.sh
@@ -39,7 +39,7 @@ echo
 
 
 echo "### Starting nginx ..."
-docker-compose up --force-recreate -d nginx
+docker-compose up --force-recreate -d client
 echo
 
 echo "### Deleting dummy certificate for $domains ..."
diff --git a/YouTubeDownloader/server/Dockerfile b/YouTubeDownloader/server/Dockerfile
old mode 100644
new mode 100755
index 48a0add..ac6b890
--- a/YouTubeDownloader/server/Dockerfile
+++ b/YouTubeDownloader/server/Dockerfile
@@ -15,3 +15,4 @@ WORKDIR /app
 
 COPY . /app
 
+CMD ["gunicorn", "--bind", "0.0.0.0:8080", "app:app"]
-- 
2.28.0

